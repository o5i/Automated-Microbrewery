.TH "Protocol Errors and Exceptions" 3 "26 May 2004" "Modbus Protocol Library Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Protocol Errors and Exceptions \- 
.PP
.SS "I/O error class"

.in +1c
.ti -1c
.RI "#define \fBFTALK_IO_ERROR_CLASS\fP   0x40"
.br
.RI "\fII/O error class. \fP"
.ti -1c
.RI "#define \fBFTALK_IO_ERROR\fP   (FTALK_IO_ERROR_CLASS | 1)"
.br
.RI "\fII/O error. \fP"
.ti -1c
.RI "#define \fBFTALK_OPEN_ERR\fP   (FTALK_IO_ERROR_CLASS | 2)"
.br
.RI "\fIPort or socket open error. \fP"
.ti -1c
.RI "#define \fBFTALK_PORT_ALREADY_OPEN\fP   (FTALK_IO_ERROR_CLASS | 3)"
.br
.RI "\fISerial port already open. \fP"
.ti -1c
.RI "#define \fBFTALK_TCPIP_CONNECT_ERR\fP   (FTALK_IO_ERROR_CLASS | 4)"
.br
.RI "\fITCP/IP connection error. \fP"
.ti -1c
.RI "#define \fBFTALK_CONNECTION_WAS_CLOSED\fP   (FTALK_IO_ERROR_CLASS | 5)"
.br
.RI "\fIRemote peer closed TCP/IP connection. \fP"
.ti -1c
.RI "#define \fBFTALK_SOCKET_LIB_ERROR\fP   (FTALK_IO_ERROR_CLASS | 6)"
.br
.RI "\fISocket library error. \fP"
.ti -1c
.RI "#define \fBFTALK_PORT_ALREADY_BOUND\fP   (FTALK_IO_ERROR_CLASS | 7)"
.br
.RI "\fITCP port already bound. \fP"
.ti -1c
.RI "#define \fBFTALK_LISTEN_FAILED\fP   (FTALK_IO_ERROR_CLASS | 8)"
.br
.RI "\fIListen failed. \fP"
.ti -1c
.RI "#define \fBFTALK_FILEDES_EXCEEDED\fP   (FTALK_IO_ERROR_CLASS | 9)"
.br
.RI "\fIFile descriptors exceeded. \fP"
.ti -1c
.RI "#define \fBFTALK_PORT_NO_ACCESS\fP   (FTALK_IO_ERROR_CLASS | 10)"
.br
.RI "\fINo permission to access serial port or TCP port. \fP"
.ti -1c
.RI "#define \fBFTALK_PORT_NOT_AVAIL\fP   (FTALK_IO_ERROR_CLASS | 11)"
.br
.RI "\fITCP port not available. \fP"
.in -1c
.SS "Fieldbus protocol error class"

.in +1c
.ti -1c
.RI "#define \fBFTALK_BUS_PROTOCOL_ERROR_CLASS\fP   0x80"
.br
.RI "\fIFieldbus protocol error class. \fP"
.ti -1c
.RI "#define \fBFTALK_CHECKSUM_ERROR\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 1)"
.br
.RI "\fIChecksum error. \fP"
.ti -1c
.RI "#define \fBFTALK_INVALID_FRAME_ERROR\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 2)"
.br
.RI "\fIInvalid frame error. \fP"
.ti -1c
.RI "#define \fBFTALK_INVALID_REPLY_ERROR\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 3)"
.br
.RI "\fIInvalid reply error. \fP"
.ti -1c
.RI "#define \fBFTALK_REPLY_TIMEOUT_ERROR\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 4)"
.br
.RI "\fIReply time-out. \fP"
.ti -1c
.RI "#define \fBFTALK_SEND_TIMEOUT_ERROR\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 5)"
.br
.RI "\fISend time-out. \fP"
.ti -1c
.RI "#define \fBFTALK_MBUS_EXCEPTION_RESPONSE\fP   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 0x20)"
.br
.RI "\fIModbus\*{(R)\*}  exception response. \fP"
.ti -1c
.RI "#define \fBFTALK_MBUS_ILLEGAL_FUNCTION_RESPONSE\fP   (FTALK_MBUS_EXCEPTION_RESPONSE | 1)"
.br
.RI "\fIIllegal Function exception response. \fP"
.ti -1c
.RI "#define \fBFTALK_MBUS_ILLEGAL_ADDRESS_RESPONSE\fP   (FTALK_MBUS_EXCEPTION_RESPONSE | 2)"
.br
.RI "\fIIllegal Data Address exception response. \fP"
.ti -1c
.RI "#define \fBFTALK_MBUS_ILLEGAL_VALUE_RESPONSE\fP   (FTALK_MBUS_EXCEPTION_RESPONSE | 3)"
.br
.RI "\fIIllegal Data Value exception response. \fP"
.ti -1c
.RI "#define \fBFTALK_MBUS_SLAVE_FAILURE_RESPONSE\fP   (FTALK_MBUS_EXCEPTION_RESPONSE | 4)"
.br
.RI "\fISlave Device Failure exception response. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBFTALK_SUCCESS\fP   0"
.br
.RI "\fIOperation was successful. \fP"
.ti -1c
.RI "#define \fBFTALK_ILLEGAL_ARGUMENT_ERROR\fP   1"
.br
.RI "\fIIllegal argument error. \fP"
.ti -1c
.RI "#define \fBFTALK_ILLEGAL_STATE_ERROR\fP   2"
.br
.RI "\fIIllegal state error. \fP"
.ti -1c
.RI "#define \fBFTALK_EVALUATION_EXPIRED\fP   3"
.br
.RI "\fIEvaluation expired. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "char * \fBgetBusProtocolErrorText\fP (int errCode)"
.br
.RI "\fIReturns an error text string for a given error code. \fP"
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define FTALK_SUCCESS   0"
.PP
Operation was successful. This return codes indicates no error. 
.SS "#define FTALK_ILLEGAL_ARGUMENT_ERROR   1"
.PP
Illegal argument error. A parameter passed to the function returning this error code is invalid or out of range. 
.SS "#define FTALK_ILLEGAL_STATE_ERROR   2"
.PP
Illegal state error. The function is called in a wrong state. This return code is returned by all functions if the protocol has not been opened succesfully yet. 
.SS "#define FTALK_EVALUATION_EXPIRED   3"
.PP
Evaluation expired. This version of the library is a function limited evaluation version and has now expired. 
.SS "#define FTALK_IO_ERROR_CLASS   0x40"
.PP
I/O error class. Errors of this class signal a problem in conjunction with the I/O system. 
.SS "#define FTALK_IO_ERROR   (FTALK_IO_ERROR_CLASS | 1)"
.PP
I/O error. The underlaying I/O system reported an error. 
.SS "#define FTALK_OPEN_ERR   (FTALK_IO_ERROR_CLASS | 2)"
.PP
Port or socket open error. The TCP/IP socket or the serial port could not be opened. In case of a serial port it indicates that the serial port does not exist on the system. 
.SS "#define FTALK_PORT_ALREADY_OPEN   (FTALK_IO_ERROR_CLASS | 3)"
.PP
Serial port already open. The serial port defined for the open operation is already opened by another application. 
.SS "#define FTALK_TCPIP_CONNECT_ERR   (FTALK_IO_ERROR_CLASS | 4)"
.PP
TCP/IP connection error. Signals that the TCP/IP connection could not be established. Typically this error occurs when a host does not exist on the network or the IP address or host name is wrong. The remote host must also listen on the appropriate port. 
.SS "#define FTALK_CONNECTION_WAS_CLOSED   (FTALK_IO_ERROR_CLASS | 5)"
.PP
Remote peer closed TCP/IP connection. Signals that the TCP/IP connection was closed by the remote peer or is broken. 
.SS "#define FTALK_SOCKET_LIB_ERROR   (FTALK_IO_ERROR_CLASS | 6)"
.PP
Socket library error. The TCP/IP socket library (e.g. WINSOCK) could not be loaded or the DLL is missing or not installed. 
.SS "#define FTALK_PORT_ALREADY_BOUND   (FTALK_IO_ERROR_CLASS | 7)"
.PP
TCP port already bound. Indicates that the specified TCP port cannot be bound. The port might already be taken by another application or hasn't been released yet by the TCP/IP stack for re-use. 
.SS "#define FTALK_LISTEN_FAILED   (FTALK_IO_ERROR_CLASS | 8)"
.PP
Listen failed. The listen operation on the specified TCP port failed.. 
.SS "#define FTALK_FILEDES_EXCEEDED   (FTALK_IO_ERROR_CLASS | 9)"
.PP
File descriptors exceeded. Maximum number of usable file descriptors exceeded. 
.SS "#define FTALK_PORT_NO_ACCESS   (FTALK_IO_ERROR_CLASS | 10)"
.PP
No permission to access serial port or TCP port. You don't have permission to access the serial port or TCP port. Run the program as root. If the error is related to a serial port, change the access privilege. If it is related to TCP/IP use TCP port number which is outside the IPPORT_RESERVED range. 
.SS "#define FTALK_PORT_NOT_AVAIL   (FTALK_IO_ERROR_CLASS | 11)"
.PP
TCP port not available. The specified TCP port is not available on this machine. 
.SS "#define FTALK_BUS_PROTOCOL_ERROR_CLASS   0x80"
.PP
Fieldbus protocol error class. Signals that a fieldbus protocol related error has occured. This class is the general class of errors produced by failed or interrupted data transfer functions. It is also produced when receiving invalid frames or exception responses. 
.SS "#define FTALK_CHECKSUM_ERROR   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 1)"
.PP
Checksum error. Signals that the checksum of a received frame is invalid. A poor data link typically causes this error. 
.SS "#define FTALK_INVALID_FRAME_ERROR   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 2)"
.PP
Invalid frame error. Signals that a received frame does not correspond either by structure or content to the specification or does not match a previously sent query frame. A poor data link typically causes this error. 
.SS "#define FTALK_INVALID_REPLY_ERROR   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 3)"
.PP
Invalid reply error. Signals that a received reply does not correspond to the specification. 
.SS "#define FTALK_REPLY_TIMEOUT_ERROR   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 4)"
.PP
Reply time-out. Signals that a fieldbus data transfer timed out. This can occur if the slave device does not reply in time or does not reply at all. A wrong unit adress will also cause this error. In some occasions this exception is also produced if the characters received don't constitute a complete frame. 
.SS "#define FTALK_SEND_TIMEOUT_ERROR   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 5)"
.PP
Send time-out. Signals that a fieldbus data send timed out. This can only occur if the handshake lines are not properly set. 
.SS "#define FTALK_MBUS_EXCEPTION_RESPONSE   (FTALK_BUS_PROTOCOL_ERROR_CLASS | 0x20)"
.PP
Modbus\*{(R)\*}  exception response. Signals that a Modbus exception response was received. Exception responses are sent by a slave device instead of a normal response message if it received the query message correctly but cannot handle the query. This error usually occurs if a master queried an invalid or non-existing data address or if the master used a Modbus function, which is not supported by the slave device. 
.SS "#define FTALK_MBUS_ILLEGAL_FUNCTION_RESPONSE   (FTALK_MBUS_EXCEPTION_RESPONSE | 1)"
.PP
Illegal Function exception response. Signals that an Illegal Function exception response (code 01) was received. This exception response is sent by a slave device instead of a normal response message if a master sent a Modbus function, which is not supported by the slave device. 
.SS "#define FTALK_MBUS_ILLEGAL_ADDRESS_RESPONSE   (FTALK_MBUS_EXCEPTION_RESPONSE | 2)"
.PP
Illegal Data Address exception response. Signals that an Illegal Data Address exception response (code 02) was received. This exception response is sent by a slave device instead of a normal response message if a master queried an invalid or non-existing data address. 
.SS "#define FTALK_MBUS_ILLEGAL_VALUE_RESPONSE   (FTALK_MBUS_EXCEPTION_RESPONSE | 3)"
.PP
Illegal Data Value exception response. Signals that a Illegal Value exception response was (code 03) received. This exception response is sent by a slave device instead of a normal response message if a master sent a data value, which is not an allowable value for the slave device. 
.SS "#define FTALK_MBUS_SLAVE_FAILURE_RESPONSE   (FTALK_MBUS_EXCEPTION_RESPONSE | 4)"
.PP
Slave Device Failure exception response. Signals that a Slave Device Failure exception response (code 04) was received. This exception response is sent by a slave device instead of a normal response message if an unrecoverable error occured while processing the requested action. This response is also sent if the request would generate a response whose size exceeds the allowable data size. 
.SH "Function Documentation"
.PP 
.SS "char* getBusProtocolErrorText (int errCode)"
.PP
Returns an error text string for a given error code. \fBParameters:\fP
.RS 4
\fIerrCode\fP FieldTalk error code 
.RE
.PP
\fBReturns:\fP
.RS 4
Error text string 
.RE
.PP

