.TH "install" 3 "26 May 2004" "Modbus Protocol Library Documentation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
install \- Installation and Source Code Compilation
.SH "Linux, UNIX and QNX Systems: Unpacking and Compiling the Source"
.PP
1. Download and save the zipped tarball into your project directory.
.PP
2. Uncompress the zipped tarball using gzip:
.PP
.PP
.nf
# gunzip FT-MB??-??-ALL.2.0.tar.gz
.PP
.PP
3. Untar the tarball
.PP
.PP
.nf
# tar xf FT-MB??-??-ALL.2.0.tar
.PP
.PP
The tarball will create the following directory structure in your project directory:
.PP
.PP
.nf
             myprj
               |
               +-- fieldtalk
                   |
                   +-- doc
                   +-- src
.PP
.PP
4. Compile the library from the source code. Enter the FieldTalk src directory and call the make script:
.PP
.PP
.nf
# cd fieldtalk/src
# ./make
.PP
.PP
The make shell script tries to detect your platform and executes the compiler and linker commands.
.PP
The compiler and linker configuration is contained in the file src/platform.
.PP
5. The library will be compiled into one of the following platform specfic sub-directories:
.PP
Platform Library Directory Linux lib/linux QNX 6 lib/qnx6 QNX 4 lib/qnx4 Irix lib/irix OSF1/True 64/Digital UNIX lib/osf Solaris lib/solaris HP-UX lib/hpux IBM AIX lib/aix Generic UNIX lib/unix 
.PP
Also the necessary header files to link against the library are copied into a include directory.
.PP
Your directory structure looks now like: 
.PP
.nf
             myprj
               |
               +-- fieldtalk
                   |
                   +-- doc
                   +-- src
                   +-- include
                   +-+ lib
                     |
                     +-- {platform}    (exact name depends on platform)

.PP
.PP
6. The library is ready to be used.
.SH "Windows Systems: Unpacking and Compiling the Source"
.PP
1. Download and save the zip archive into a project directory.
.PP
2. Uncompress the archive using unzip or another zip tool of your choice:
.PP
.PP
.nf
# unzip FT-MB??-WIN-ALL.2.0.zip
.PP
.PP
The archive will create the following directory structure in your project directory:
.PP
.PP
.nf
             myprj
               |
               +-- fieldtalk
                   |
                   +-- doc
                   +-- src
.PP
.PP
3. Compile the library from the source code.
.PP
To compile using command line tools, enter the FieldTalk src directory and run the make file.
.PP
If you are using Microsoft C++ and nmake: 
.PP
.nf
# cd fieldtalk\src
# nmake

.PP
.PP
If you are using Borland C++ and Borland's make: 
.PP
.nf
# cd fieldtalk\src
# make

.PP
.PP
To compile using Visual Studio.net, open the supplied .vcproj project file with Visual Studio.net.
.PP
4. The library will be compiled into one of the following sub-directories of your project directory:
.PP
Platform Library Directory Windows 32-bit Visual C++ lib\\win32_vc Windows 32-bit Borland C++ lib\\win32_bc 
.PP
Your directory structure looks now like: 
.PP
.nf
             myprj
               |
               +-- fieldtalk
                   |
                   +-- doc
                   +-- src
                   +-- include
                   +-+ lib
                     |
                     +-- win32_??   (exact name depends on compiler)

.PP
.PP
5. The library is ready to be used.
.SH "Specific Platform Notes"
.PP
.SS "QNX 4"
In order to get proper control over Modebus timing, you have to adjust the system's clock rate. The standard ticksize is not suitable for Modbus RTU and needs to be adjusted. Configure the ticksize to a minimum of 1 ms.
.SS "VxWorks"
There is no make file or script supplied for VxWorks because VxWorks applications and libraries are best compiled from the Tornado IDE.
.PP
To compile and link your applications against the FieldTalk library, add all the *.c and *.cpp files supplied in the src, src/hmlib/common, src/hmlib/posix4 and src/hmlib/vxworks to your project. 
